// Code generated by mockery v2.20.2. DO NOT EDIT.

package kneu

import mock "github.com/stretchr/testify/mock"

// MockOauthClientInterface is an autogenerated mock type for the OauthClientInterface type
type MockOauthClientInterface struct {
	mock.Mock
}

// GetOauthToken provides a mock function with given fields: redirectUri, code
func (_m *MockOauthClientInterface) GetOauthToken(redirectUri string, code string) (OauthTokenResponse, error) {
	ret := _m.Called(redirectUri, code)

	var r0 OauthTokenResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (OauthTokenResponse, error)); ok {
		return rf(redirectUri, code)
	}
	if rf, ok := ret.Get(0).(func(string, string) OauthTokenResponse); ok {
		r0 = rf(redirectUri, code)
	} else {
		r0 = ret.Get(0).(OauthTokenResponse)
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(redirectUri, code)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetOauthUrl provides a mock function with given fields: redirectUri, state
func (_m *MockOauthClientInterface) GetOauthUrl(redirectUri string, state string) string {
	ret := _m.Called(redirectUri, state)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(redirectUri, state)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewMockOauthClientInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockOauthClientInterface creates a new instance of MockOauthClientInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockOauthClientInterface(t mockConstructorTestingTNewMockOauthClientInterface) *MockOauthClientInterface {
	mock := &MockOauthClientInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
