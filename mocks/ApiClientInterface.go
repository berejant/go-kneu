// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	kneu "github.com/berejant/go-kneu"
	mock "github.com/stretchr/testify/mock"
)

// ApiClientInterface is an autogenerated mock type for the ApiClientInterface type
type ApiClientInterface struct {
	mock.Mock
}

// GetUserMe provides a mock function with given fields:
func (_m *ApiClientInterface) GetUserMe() (kneu.UserMeResponse, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetUserMe")
	}

	var r0 kneu.UserMeResponse
	var r1 error
	if rf, ok := ret.Get(0).(func() (kneu.UserMeResponse, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() kneu.UserMeResponse); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(kneu.UserMeResponse)
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewApiClientInterface creates a new instance of ApiClientInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewApiClientInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *ApiClientInterface {
	mock := &ApiClientInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
